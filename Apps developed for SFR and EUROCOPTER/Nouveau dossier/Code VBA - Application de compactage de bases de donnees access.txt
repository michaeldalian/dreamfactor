Option Compare Database
Option Explicit

Private Sub Commande7_Click()
Dim chemin As String
Dim i As Byte
Dim db As Database
Dim rs As Recordset

Set db = CurrentDb
Set rs = db.OpenRecordset("tListeTempo", dbOpenDynaset)

DoCmd.SetWarnings False
DoCmd.RunSQL "DELETE tListeTempo.* FROM tListeTempo"

    chemin = GetOpenFile(, "*.*")
    If chemin = "" Then Exit Sub
    Do While Right(chemin, 1) <> "\"
        chemin = Left(chemin, Len(chemin) - 1)
    Loop
    
    Me!Rep = chemin
    Me!Rechercher.SetFocus
    SendKeys ("{ENTER}")
DoCmd.SetWarnings True
End Sub

Private Sub Form_Close()
Dim db As Database
Dim Liste, Sortie As Recordset
Dim Avant, Après As Long

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)
Set Sortie = db.OpenRecordset("tOut", dbOpenDynaset)

If DCount("[Base]", "tListedesBases") = 0 Then Exit Sub

With Liste
    .MoveFirst
    Do While Not .EOF
        If Not IsNull(![Taille (Après)]) Then
            Avant = ![Taille (Avant)] + Avant
            Après = ![Taille (Après)] + Après
        End If
        .MoveNext
    Loop
End With

With Sortie
    .MoveFirst
    .Edit
    ![Fermeture] = True
    .Update
End With

    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    
    MsgBox "Vous avez économisé " & Format((Avant - Après) / 1024, "##,##0.00") & " Ko."
    
    SendKeys "%o" ', True
    SendKeys "u"
    SendKeys "m"
End Sub

Private Sub Form_Open(Cancel As Integer)
Dim nombre As Byte
Dim db As Database
Dim Liste, Sortie As Recordset

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)
Set Sortie = db.OpenRecordset("tOut", dbOpenDynaset)

With Sortie
    .MoveFirst
    If ![Fermeture] = True Then
        .Edit
        ![Fermeture] = False
        .Update
        DoCmd.Quit acQuitSaveAll
    End If
End With
If DCount("[Base]", "tListedesBases") = 0 Then Exit Sub
With Liste
    .MoveFirst
    Do While Not .EOF
        If ![Taille (Après)] <> FileLen(!Base) Then
            .Edit
            ![Taille (Avant)] = FileLen(!Base)
            '![Taille (Après)] = 0
            ![Etat] = "NOK"
            .Update
        ElseIf ![Taille (Après)] = FileLen(!Base) Then
            .Edit
            ![Taille (Avant)] = FileLen(!Base)
            ![Etat] = "OK"
            .Update
        Else
            .Edit
            ![Etat] = "NOK"
            .Update
        End If
        If Not IsNull(![Date]) Then
            .Edit
            ![Visible] = 1
            .Update
        ElseIf IsNull(![Taille (Après)]) Then
            .Edit
            ![Visible] = 0
            .Update
        End If
        If Dir(Left(!Base, Len(!Base) - 4) & "*.ldb") <> "" Then
            .Edit
            ![Ouverte] = True
            .Update
        End If
        .MoveNext
    Loop
End With
Me.Refresh
    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    
End Sub

Private Sub Liste1_DblClick(Cancel As Integer)
Dim nombre, i As Byte
Dim db As Database
Dim Liste As Recordset

On Error GoTo ErreurCompact

DoCmd.SetWarnings False
DoCmd.Hourglass True
nombre = Me!Liste1.ListCount

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)

If DCount("[Base]", "tListedesBases") = 0 Then Exit Sub

For i = 0 To nombre - 1
    If Me!Liste1.Selected(i) Then
        If Me!Liste1.Column(4, i) = "NOK" Then
            With Liste
                '.MoveFirst
                .FindFirst "[Base]='" & Me!Liste1.Column(0, i) & "'"
                If Dir(Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "*.ldb", vbNormal) <> "" Then
                    MsgBox "La base: " & Me!Liste1.Column(0, i) & " est ouverte." & Chr(10) & "Veuillez la fermée pour le compactage."
                    GoTo Suivant
                End If
            'End With
                DBEngine.CompactDatabase Me!Liste1.Column(0, i), Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "Newdb.mdb"
                Kill Me!Liste1.Column(0, i)
                Name Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "Newdb.mdb" As Me!Liste1.Column(0, i)
            'With Liste
                '.MoveFirst
                '.FindFirst "[Base]='" & Me!Liste1.Column(0, i) & "'"
                .Edit
                ![Taille (Après)] = FileLen(Me!Liste1.Column(0, i))
                ![Etat] = "OK"
                ![Date] = Format(Now, "dd/mm/yy")
                .Update
            End With
            Me.Refresh
        Else
            DoCmd.Hourglass False
            MsgBox "La base " & Me!Liste1.Column(0, i) & " est déjà compactée."
        End If
Suivant:
    End If
Next i
Me.Refresh

Exit_Compact:
    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    Exit Sub
ErreurCompact:
    MsgBox Err.Description & Err.HelpFile
    Resume Exit_Compact
    
End Sub

Private Sub Rechercher_Click()
On Error GoTo Err_Rechercher_Click
Dim LesBases, chemin As String
Dim db As Database
Dim Liste As Recordset
Dim i As Integer

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)
GoTo suite
LesBases = Dir(Me!Rep & "*.mdb", vbNormal)
Do While LesBases <> ""
    If Me!Rep + LesBases <> CurrentDb.Name Then
        With Liste
            .FindFirst "[Base]='" & LesBases & "'"
            If .NoMatch Then
                .AddNew
                ![Base] = LesBases
                ![Répertoire] = Me!Rep
                ![Taille (Avant)] = FileLen(Me!Rep + LesBases)
                ![Etat] = "NOK"
                ![Visible] = 1
                .Update
            ElseIf Me!Rep <> ![Répertoire] Then
                .AddNew
                ![Base] = LesBases
                ![Répertoire] = Me!Rep
                ![Taille (Avant)] = FileLen(Me!Rep + LesBases)
                ![Etat] = "NOK"
                ![Visible] = 1
                .Update
            End If
            .FindFirst "[Base]='" & LesBases & "'"
            If ![Visible] = 0 Then
                .Edit
                ![Visible] = 1
                .Update
            End If
            'If Dir(Me!Rep & Left(LesBases, Len(LesBases) - 4) & "*.ldb", vbNormal) <> "" Then
            '    .Edit
            '    ![Ouverte] = True
            '    .Update
            'End If
        End With
    End If
    LesBases = Dir
Loop

LesBases = Dir(Me!Rep & "*.mde", vbNormal)
Do While LesBases <> ""
    If Me!Rep + LesBases <> CurrentDb.Name Then
        With Liste
            .FindFirst "[Base]='" & LesBases & "'"
            If .NoMatch Then
                .AddNew
                ![Base] = LesBases
                ![Répertoire] = Me!Rep
                ![Taille (Avant)] = FileLen(Me!Rep + LesBases)
                ![Etat] = "NOK"
                ![Visible] = 1
                .Update
            ElseIf Me!Rep <> ![Répertoire] Then
                .AddNew
                ![Base] = LesBases
                ![Répertoire] = Me!Rep
                ![Taille (Avant)] = FileLen(Me!Rep + LesBases)
                ![Etat] = "NOK"
                ![Visible] = 1
                .Update
            End If
            .FindFirst "[Base]='" & LesBases & "'"
            If ![Visible] = 0 Then
                .Edit
                ![Visible] = 1
                .Update
            End If
            'If Dir(Me!Rep & Left(LesBases, Len(LesBases) - 4) & "*.ldb", vbNormal) <> "" Then
            '    .Edit
            '    ![Ouverte] = True
            '    .Update
            'End If
        End With
    End If
    LesBases = Dir
Loop
suite:
With Application.FileSearch
    .NewSearch
    .LookIn = Me!Rep
    .FileName = "*.mdb;*.mde"
    .SearchSubFolders = True
    If .Execute() > 0 Then
        'MsgBox "Ce dossier contient " & .FoundFiles.Count & _
            " fichier(s) répondant aux critères."
        For i = 1 To .FoundFiles.Count
            'MsgBox .FoundFiles(i)
            If Dir(.FoundFiles(i)) = "" Then i = i + 1
            If Left(.FoundFiles(i), Len(Me!Rep)) = Me!Rep Then
                'With Liste
                    Liste.FindFirst "[Base]='" & .FoundFiles(i) & "'"
                    If Liste.NoMatch Then
                        Liste.AddNew
                        Liste![Base] = .FoundFiles(i)
                        '![Répertoire] = Me!Rep
                        Liste![Taille (Avant)] = FileLen(.FoundFiles(i))
                        Liste![Etat] = "NOK"
                        Liste![Visible] = 1
                        Liste.Update
                    'ElseIf Me!Rep <> ![Répertoire] Then
                        '.AddNew
                        '![Base] = LesBases
                        '![Répertoire] = Me!Rep
                        '![Taille (Avant)] = FileLen(Me!Rep + LesBases)
                        '![Etat] = "NOK"
                        '![Visible] = 1
                        '.Update
                    End If
                    Liste.FindFirst "[Base]='" & .FoundFiles(i) & "'"
                    If Liste![Visible] = 0 Then
                        Liste.Edit
                        Liste![Visible] = 1
                        Liste.Update
                    End If
                    'If Dir(Me!Rep & Left(LesBases, Len(LesBases) - 4) & "*.ldb", vbNormal) <> "" Then
                    '    .Edit
                    '    ![Ouverte] = True
                    '    .Update
                    'End If
                'End With
            Else
                MsgBox .FoundFiles(i)
            End If
        Next i
    Else
        MsgBox "Aucun fichier n'a été trouvé."
    End If
End With

Me.Refresh
Exit_Rechercher_Click:
    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    Exit Sub

Err_Rechercher_Click:
    MsgBox Err.Description
    Resume Exit_Rechercher_Click
    
End Sub

Private Sub Rep_AfterUpdate()
    Me!Commande7.SetFocus
    SendKeys ("{ENTER}")
End Sub

Private Sub Supprimer_Click()
On Error GoTo Err_Supprimer_Click
Dim nombre, i As Byte
Dim db As Database
Dim Liste As Recordset

DoCmd.SetWarnings False
nombre = Me!Liste1.ListCount

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)

For i = 0 To nombre - 1
    If Me!Liste1.Selected(i) Then
        With Liste
            .MoveFirst
            .FindFirst "[Base]='" & Me!Liste1.Column(0, i) & "'"
            .Delete
        End With
    End If
Next i
Me.Refresh

Exit_Supprimer_Click:
    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    Exit Sub

Err_Supprimer_Click:
    MsgBox Err.Description
    Resume Exit_Supprimer_Click
    
End Sub

Private Sub Compact_Click()
Dim nombre, i As Byte
Dim db As Database
Dim Liste As Recordset

On Error GoTo Err_Compact_Click

Set db = CurrentDb
Set Liste = db.OpenRecordset("tListedesBases", dbOpenDynaset)

DoCmd.SetWarnings False
DoCmd.Hourglass True
nombre = Me!Liste1.ListCount

If DCount("[Base]", "tListedesBases") = 0 Then Exit Sub

For i = 0 To nombre - 1
    If Me!Liste1.Selected(i) Then
        If Me!Liste1.Column(4, i) = "NOK" Then
            With Liste
                '.MoveFirst
                .FindFirst "[Base]='" & Me!Liste1.Column(0, i) & "'"
                If Dir(Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "*.ldb", vbNormal) <> "" Then
                    MsgBox "La base: " & Me!Liste1.Column(0, i) & " est ouverte." & Chr(10) & "Veuillez la fermée pour le compactage."
                    GoTo Suivant
                End If
            'End With
                DBEngine.CompactDatabase Me!Liste1.Column(0, i), Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "Newdb.mdb"
                Kill Me!Liste1.Column(0, i)
                Name Left(Me!Liste1.Column(0, i), Len(Me!Liste1.Column(0, i)) - 4) & "Newdb.mdb" As Me!Liste1.Column(0, i)
            'With Liste
                '.MoveFirst
                '.FindFirst "[Base]='" & Me!Liste1.Column(0, i) & "'"
                .Edit
                ![Taille (Après)] = FileLen(Me!Liste1.Column(0, i))
                ![Etat] = "OK"
                ![Date] = Format(Now, "dd/mm/yy")
                .Update
            End With
            Me.Refresh
        Else
            DoCmd.Hourglass False
            MsgBox "La base " & Me!Liste1.Column(0, i) & " est déjà compactée."
        End If
Suivant:
    End If
Next i
Me.Refresh
DoCmd.SetWarnings True

Exit_Compact_Click:
    DoCmd.SetWarnings True
    Set db = Nothing
    Set Liste = Nothing
    DoCmd.Hourglass False
    Exit Sub

Err_Compact_Click:
    MsgBox Err.Description
    Resume Exit_Compact_Click
    
End Sub
